{"version":3,"sources":["Constants.js","components/NavBar.jsx","components/About.js","components/MapContainer.jsx","components/AddressConverter.jsx","components/Home.jsx","components/Signup.jsx","components/Signin.jsx","components/MyProfile.jsx","components/Products.jsx","components/Order.jsx","components/ShoppingCart.jsx","components/App.js","serviceWorker.js","index.js"],"names":["config","url","API_URL","FRONT_END_URL","NavBar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","this","props","loggedInStatus","onClick","handleLogout","userID","name","Component","Home","CENTRE_OF_AUSTRALIA","lat","lng","MapContainer","compose","withProps","googleMapURL","process","loadingElement","style","height","containerElement","mapElement","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","isMarkerShown","position","SERVER_URL","AddressConverter","state","coordinates","address","_handleChange","bind","_handleSubmit","axios","get","then","results","setState","data","geometry","location","event","target","value","preventDefault","fetchGPS","onSubmit","placeholder","onChange","isLoggedIn","user","BACK_END_URL","Signup","handleChange","handleSubmit","email","password","password_confirmation","post","withCredentials","response","console","log","status","handleLogin","redirect","errors","catch","error","history","push","handleErrors","map","key","Signin","logged_in","withRouter","MyProfile","patch","isChange","handleUserEdit","for","Products","handleClick","product_id","sendToCart","products","showProducts","matchUser","getCategories","handleSort","resetSorts","filterBy","handleFilter","user_id","users","length","_","findIndex","productsArray","product","src","image_url","alt","slice","category","quantity","description","href","Math","floor","abs","Date","created_at","pathname","allCategories","filter","item","i","ar","indexOf","sorted","orderBy","sortByQuantity","sortByRecent","filtered","o","renderResults","Order","ShoppingCart","App","loginStatus","delete","PRODUCT_URL","USER_URL","fetchProducts","fetchUsers","exact","path","component","About","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.51c94189.chunk.js","sourcesContent":["// Constants.js\nconst prod = {\n    url: {\n        API_URL: \"https://covid-co-op.herokuapp.com\",\n        FRONT_END_URL: \"https://joshjm.github.io/Covid-Co-op\"\n     }\n   };\nconst dev = {\n    url: {\n        API_URL: \"https://covid-co-op.herokuapp.com\", // rails - start first\n        FRONT_END_URL: \"http://localhost:3001\" // react\n    }\n   };\nexport const config = process.env.NODE_ENV === \"development\" ? dev : prod;\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\n\nimport './NavBar.css'\nimport { config } from '../Constants' // get prod/dev urls\nlet FRONT_END_URL = config.url.FRONT_END_URL;\nlet BACK_END_URL = config.url.API_URL;\n\nclass NavBar extends Component{\n    render(){\n        return(\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light static-top mb-5 shadow\">\n                <Link to=\"/\" className=\"navbar-brand\">Covid Coop⚕</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\"\n                    aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                    {this.props.loggedInStatus ? (\n                        <ul className=\"navbar-nav ml-auto \">\n                            <li className=\"nav-item\">\n                                <Link to=\"/\" className=\"nav-link\" onClick={this.props.handleLogout}>Click to log out {this.props.userID.name}</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to='/' className=\"nav-link\">Home</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to='/order' className=\"nav-link\">Place order</Link>\n                            </li>\n                            {/* TODO conditionally render only if cart.length>1 */}\n                            <li className=\"nav-item\">\n                                <Link to='/shoppingcart' className=\"nav-link\">View Cart</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to='/profile' className=\"nav-link\">My Profile</Link>\n                            </li>\n                        </ul>\n                    ):(\n                        <ul className=\"navbar-nav ml-auto \">\n                            <li className=\"nav-item\">\n                                <Link to='/' className=\"nav-link\">Home</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to='/sign-up' className=\"nav-link\">Sign up</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to='/sign-in' className=\"nav-link\">Sign in</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to='/order' className=\"nav-link\">Place order</Link>\n                            </li>\n                        </ul>\n                    )}\n                </div>\n            </nav>\n        )\n    }\n}\nexport default NavBar;\n","import React, {Component} from 'react';\n\nclass Home extends Component{\n    render(){\n    return(\n            <div>\n                <h1>About page</h1>\n            </div>\n        )   \n    }\n}\n\nexport default Home;","import React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\nconst google_api_key = process.env.REACT_APP_GOOGLE_API_KEY\nconst CENTRE_OF_AUSTRALIA = {lat: -25.363, lng: 134.211}\nconst MapContainer = compose(\n  withProps({\n    googleMapURL:\n      `https://maps.googleapis.com/maps/api/js?key=${google_api_key}&v=3.exp&libraries=geometry,drawing,places`,\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `600px` }} />,\n    mapElement: <div style={{ height: `100%` }} />\n  }),\n  withScriptjs,\n  withGoogleMap\n)(props => (\n  <GoogleMap defaultZoom={4} defaultCenter={CENTRE_OF_AUSTRALIA}>\n    {props.isMarkerShown && (\n        <div>\n            <Marker position={{ lat: -34.397, lng: 150.144 }} />\n            <Marker position={{ lat: -34.497, lng: 150.644 }} />\n        </div>\n    )}\n  </GoogleMap>\n));\n\nexport default MapContainer;","import React, {Component} from \"react\";\nimport axios from \"axios\";\nconst google_api_key = process.env.REACT_APP_GOOGLE_API_KEY\nconst RESPONSE_TYPE = \"json\";\nconst SERVER_URL = `https://maps.googleapis.com/maps/api/geocode/${RESPONSE_TYPE}?`\nclass AddressConverter extends Component{\n    constructor(){\n        super(); // necessary\n        this.state={ // where we define the variables we want to store and sahre across the component\n            coordinates: {lat: null,  lng: null}, \n            address: '',\n        }\n        this._handleChange = this._handleChange.bind(this); // allows these functions to access `this'\n        this._handleSubmit = this._handleSubmit.bind(this);\n        // fetchGPS(\"18 Zephyr Court Birkdale\");\n    }\n    fetchGPS(address){\n        axios.get(`${SERVER_URL}key=${google_api_key}&address=${address}`)\n        .then((results) =>{\n        this.setState(\n            {coordinates: results.data.results[0].geometry.location}\n        );\n        })\n    }\n    \n    _handleChange(event){\n        this.setState({address: event.target.value});\n    }\n    _handleSubmit(event){\n        event.preventDefault();\n        this.fetchGPS(this.state.address);\n    }\n    render(){\n\n        return(\n            <div className=\"container\">\n                <h2> convert address to gps </h2>\n                <form onSubmit={this._handleSubmit}>\n                    <input type=\"text\" placeholder=\"address\" onChange={this._handleChange} /> \n                    <button>Submit</button>\n                </form>\n                <div className=\"output-display\">\n                    Output Coordinates: {`Lat: ${this.state.coordinates.lat}, Long: ${this.state.coordinates.lng}` }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddressConverter;","import React, {Component} from 'react';\nimport axios from 'axios'\nimport {Link} from 'react-router-dom';\nimport  MapContainer  from './MapContainer';\nimport  AddressConverter  from './AddressConverter';\nimport './Home.css';\nimport { config } from '../Constants' // get prod/dev urls\nimport { Redirect } from 'react-router-dom'\n\nlet FRONT_END_URL = config.url.FRONT_END_URL;\nlet BACK_END_URL = config.url.API_URL;\n\n\nclass Home extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      user: {}\n     };\n  }\n\n  render(){\n  return(\n          <div>\n              <h1>Covid Coop Home</h1>\n              <MapContainer  isMarkerShown/>\n              <AddressConverter />\n          </div>\n      )\n  }\n}\n\nexport default Home;\n","import React, {useState, Component}  from 'react';\nimport './Signup.css';\nimport axios from 'axios';\nimport { render } from '@testing-library/react';\nimport { config } from '../Constants' // get prod/dev urls\nlet FRONT_END_URL = config.url.FRONT_END_URL;\nlet BACK_END_URL = config.url.API_URL;\n\nclass Signup extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: 'test@test.com',\n      password: 'chicken',\n      password_confirmation: 'chicken',\n      address: '',\n      errors: '',\n    };\n  }\n\n\n  handleChange = (event) => {\n      const {name, value} = event.target\n      this.setState({\n        [name]: value\n      })\n    };\n\n  handleSubmit = (event) => {\n      event.preventDefault()\n      const {email, password, password_confirmation, address} = this.state\n  let user = {\n    email: email,\n    password: password,\n    password_confirmation: password_confirmation,\n    location: address\n  }\n    axios.post(BACK_END_URL+'/users', user, {withCredentials: true})\n  .then(response => {\n    console.log(response);\n    console.log(\"flag\");\n    if (response.data.status === 'created') {\n      this.props.handleLogin(response.data)\n      this.redirect()\n    } else {\n      this.setState({\n        errors: response.data.errors\n      })\n    }\n  })\n  .catch(error => console.log('api errors:', error))\n  };\n\n  redirect = () => {\n    this.props.history.push('/')\n  }\n\n  handleErrors = () => {\n    return (\n      <div>\n        <ul>{this.state.errors.map((error) => {\n          return <li key={error}>{error}</li>\n        })}\n        </ul>\n      </div>\n    )\n  }\n\n    render(){\n      const {email, password, password_confirmation, address} = this.state\n\n        return(\n            <div className='row justify-content-md-center'>\n                <div className=\"col-md-6\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h2 className = \"center\">Sign Up</h2>\n                              <form onSubmit={this.handleSubmit}>\n                                <div className=\"form-group\">\n                                    <label >Email</label>\n                                    <input\n                                      className=\"form-control\"\n                                      name=\"email\"\n                                      type=\"email\"\n                                      id=\"email\"\n                                      placeholder=\"Email\"\n                                      onChange={this.handleChange}\n                                      value={this.state.email}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label >Password</label>\n                                    <input\n                                      className=\"form-control\"\n                                      type=\"password\"\n                                      name=\"password_confirmation\"\n                                      id=\"password\"\n                                      placeholder=\"Password\"\n                                      onChange={this.handleChange}\n                                      value={this.state.password}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label > Confirm Password</label>\n                                    <input\n                                      className=\"form-control\"\n                                      type=\"password\"\n                                      name=\"password\"\n                                      id=\"password-confirmation\"\n                                      placeholder=\"Password\"\n                                      onChange={this.handleChange}\n                                      value={this.state.password_confirmation}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label >Address</label>\n                                    <input\n                                      className=\"form-control\"\n                                      type=\"text\"\n                                      name=\"address\"\n                                      id=\"address\"\n                                      placeholder=\"address\"\n                                      onChange={this.handleChange}\n                                      value={this.state.address}\n                                    />\n                                </div>\n                                <button type=\"submit\" id=\"submit-btn\" className=\"btn btn-primary\">Submit</button>\n                              </form>\n\n                                <div>\n                                  {\n                                    this.state.errors ? this.handleErrors() : null\n                                  }\n                                </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Signup;\n","import React, {Component}  from 'react';\nimport './Signin.css';\nimport axios from 'axios'\nimport {Redirect, withRouter } from 'react-router-dom';\nimport { config } from '../Constants' // get prod/dev urls\nlet FRONT_END_URL = config.url.FRONT_END_URL;\nlet BACK_END_URL = config.url.API_URL;\n\n\nclass Signin extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: 'test@test.com',\n      password: 'chicken',\n      errors: ''\n     };\n  }\n\n  handleChange = (event) => {\n    const {name, value} = event.target\n    this.setState({\n      [name]: value\n    })\n  };\n\n  handleSubmit = (event) => {\n      event.preventDefault()\n      const {email, password} = this.state\n\n      let user = {\n        email: email,\n        password: password\n      }\n\n      axios.post(BACK_END_URL+'/login', {user}, {withCredentials: true})\n        .then(response => {\n          if (response.data.logged_in) {\n            this.props.handleLogin(response.data);\n            this.props.history.push(\"/\") //doing redirect here.\n\n          } else {\n            this.setState({\n              errors: response.data.errors\n            })\n          }\n        })\n        .catch(error => console.log('api errors:', error))\n    };\n\n\n    handleErrors = () => {\n        return (\n          <div>\n            <ul>\n            {this.state.errors.map(error => {\n            return <li key={error}>{error}</li>\n              })}\n            </ul>\n          </div>\n        )\n      }\n\n    render(){\n      const {email, password} = this.state\n\n        return(\n            <div className='row justify-content-md-center'>\n                <div className=\"col-md-6\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h2 className = \"center\">Sign In</h2>\n                              <form onSubmit={this.handleSubmit}>\n                                <div className=\"form-group\">\n                                    <label>Email</label>\n                                    <input\n                                      className=\"form-control\"\n                                      name=\"email\"\n                                      type=\"email\"\n                                      id=\"email\"\n                                      placeholder=\"Email\"\n                                      value={this.state.email}\n                                      onChange={this.handleChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label >Password</label>\n                                    <input\n                                      className=\"form-control\"\n                                      name=\"password\"\n                                      type=\"password\"\n                                      id=\"password\"\n                                      placeholder=\"Password\"\n                                      value={this.state.password}\n                                      onChange={this.handleChange}\n                                    />\n                                </div>\n                                <button type=\"submit\" id=\"submit-btn\" className=\"btn btn-primary\">Sign In</button>\n                              </form>\n                              <div>\n                                {this.state.errors ? this.handleErrors() : null}\n                              </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Signin);\n","import React, {useState, Component}  from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './MyProfile.css';\nimport axios from 'axios';\nimport { render } from '@testing-library/react';\nimport { config } from '../Constants' // get prod/dev urls\nlet FRONT_END_URL = config.url.FRONT_END_URL;\nlet BACK_END_URL = config.url.API_URL;\n\nclass MyProfile extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      password_confirmation: '',\n      location:'',\n      errors: '',\n      isChange: false,\n      SERVER_URL: BACK_END_URL\n     };\n     this.redirect = this.redirect.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      email: this.props.user.email,\n      location: this.props.user.location\n    })\n  }\n\n  handleChange = (event) => {\n    const {name, value} = event.target\n    this.setState({\n      [name]: value\n    })\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    const {email, password, password_confirmation, location} = this.state\n    let user = {\n      email: email,\n      password: password,\n      password_confirmation: password_confirmation,\n      location: location\n    }\n    axios.patch(`${BACK_END_URL}/users/${this.props.user.id}.json`, user, {withCredentials: true})\n    .then(response => {\n      console.log(response)\n      this.setState ({\n        isChange: true\n      })\n      // update user details\n      this.props.handleUserEdit(response.data);\n      this.props.handleLogin(response.data)\n    })\n\n    .catch(error => console.log('api errors:', error))\n  };\n\n  redirect = () => {\n    this.props.history.push('/')\n  }\n\n  handleErrors = () => {\n    return (\n      <div>\n        <ul>{this.state.errors.map((error) => {\n          return <li key={error}>{error}</li>\n        })}\n        </ul>\n      </div>\n    )\n  }\n\n  render(){\n    const {email, password, password_confirmation, location} = this.state\n\n    return(\n      this.state.isChange ? < Redirect to='/' /> :\n      <div className='row justify-content-md-center'>\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h2 className = \"center\">Update User Details</h2>\n                <form onSubmit={this.handleSubmit}>\n                  <div className=\"form-group\">\n                    <label for=\"email\">Email</label>\n                    <input\n                      className=\"form-control\"\n                      name=\"email\"\n                      type=\"email\"\n                      id=\"email\"\n                      placeholder=\"Email\"\n                      onChange={this.handleChange}\n                      value={this.state.email}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"password\">Update Password</label>\n                    <input\n                      className=\"form-control\"\n                      type=\"password\"\n                      name=\"password_confirmation\"\n                      id=\"password\"\n                      placeholder=\"Password\"\n                      onChange={this.handleChange}\n                      value={this.state.password}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"password-confirmation\">Confirm Password</label>\n                    <input\n                      className=\"form-control\"\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password-confirmation\"\n                      placeholder=\"Password\"\n                      onChange={this.handleChange}\n                      value={this.state.password_confirmation}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"location\">Update Location</label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      name=\"location\"\n                      id=\"location\"\n                      placeholder=\"Location\"\n                      onChange={this.handleChange}\n                      value={this.state.location}\n                    />\n                  </div>\n                  <button type=\"submit\" id=\"submit-btn\" className=\"btn btn-primary\">Submit</button>\n                </form>\n                <div>\n                  {this.state.errors ? this.handleErrors() : null}\n                </div>\n              </div>\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MyProfile;\n","import React, { Component } from 'react'\nimport _, { uniq } from \"lodash\";\nimport SearchResults from 'react-filter-search'\nimport { Redirect } from 'react-router-dom';\nimport './Products.css'\n\nexport class Products extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: '',\n      products: this.props.products,\n      sendToCart: ''\n    }\n\n    this.showProducts = this.showProducts.bind(this);\n    this.matchUser = this.matchUser.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.getCategories = this.getCategories.bind(this);\n    this.handleSort = this.handleSort.bind(this);\n    this.resetSorts = this.resetSorts.bind(this);\n    this.filterBy = this.filterBy.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n  }\n\n\n  // AXIOS CALL TO GET ALL PRODUCTS FROM THE SERVER\n\n\n  matchUser(user_id) {\n    if (this.props.users.length > 0) {\n      return this.props.users[_.findIndex(this.props.users, { id: user_id })].name;\n    } else {\n      return '';\n    }\n  }\n\n  handleClick = (product_id) => {\n    console.log(product_id);\n    this.setState({ sendToCart: product_id })\n  }\n\n  handleChange = (event) => {\n    const { value } = event.target;\n    this.setState({ value });\n  };\n\n  showProducts(productsArray) {\n    if(productsArray) {\n      return(\n        productsArray.map((product) => {\n          return(\n          <div key={product.id} className='col-3 item'>\n            <img src={product.image_url} alt={product.name}/>\n            <h3>{product.name.slice(0, 25)} ...</h3>\n            <p>Category: {product.category}</p>\n            <p>Quantity available: {product.quantity}</p>\n            <p>{product.description.slice(0, 30)}...</p>\n            <p>Provided by: <a href=\"\">{this.matchUser(product.user_id)}</a></p>\n            <p>Posted: {Math.floor(Math.abs(new Date() - new Date(product.created_at))/1000/60/60/24)} days ago</p>\n            {this.props.isLoggedIn ? <button type=\"button\" className=\"btn btn-success btn-sm\" onClick={() => {this.handleClick(product.id)}}>Add to Cart</button> : null}\n            {this.state.sendToCart ? <Redirect to={{pathname: \"/shoppingcart\", state: {product_id: this.state.sendToCart}}} /> : ''}\n          </div>\n          )\n        })\n      )\n    } else {\n      return '';\n    }\n  }\n\n  getCategories() {\n    let allCategories = [];\n    if (this.props.products){\n      this.props.products.map((product) => {\n        allCategories.push(product.category);\n      });\n      let unique = allCategories.filter((item, i, ar) => ar.indexOf(item) === i);\n      return unique.map((category) => {\n        return (<option value={category} key={category}> {category} </option>)\n      });\n    }\n  }\n\n  sortByQuantity() {\n    let sorted = _.orderBy(this.props.products, 'quantity', 'desc');\n    this.setState({products: sorted});\n  }\n\n  sortByRecent() {\n    let sorted = _.orderBy(this.props.products, 'created_at', 'desc');\n    this.setState({ products: sorted });\n  }\n\n  handleSort(event) {\n    let key = event.target.value;\n    console.log(key);\n    if (key === 'quantity') {\n      this.sortByQuantity()\n    }\n    if (key === 'created-at') {\n      this.sortByRecent()\n    }\n  }\n\n  handleFilter(event) {\n    let category = event.target.value;\n    this.filterBy(category);\n  }\n\n    handleChange = (event) => {\n        const { value } = event.target;\n        this.setState({ value });\n    };\n\n    showProducts(productsArray) {\n        if(productsArray) {\n            return(\n                productsArray.map((product) => {\n                    return(\n                    <div key={product.id} className='col-3 item'>\n                        <img src={product.image_url} alt={product.name}/>\n                        <h3>{product.name.slice(0, 25)} ...</h3>\n                        <p>Category: {product.category}</p>\n                        <p>Quantity available: {product.quantity}</p>\n                        <p>{product.description.slice(0, 30)}...</p>\n                            <p>Provided by: <a href=\"\">{this.matchUser(product.user_id)}</a></p>\n                        <p>Posted: {Math.floor(Math.abs(new Date() - new Date(product.created_at))/1000/60/60/24)} days ago</p>\n                        {this.props.loggedInStatus ? (\n                            <p>Your location: {this.props.user.location}</p>\n                        ) : (\n                            <p>Location: {product.address}</p>\n                        )}\n                        <button type=\"button\" id=\"submit-btn\" className=\"btn btn-success btn-sm\" onClick={this.handleClick}>Add to Cart</button>\n                    </div>\n                    )\n                })\n            )\n        } else{\n            return '';\n        }\n      }\n  filterBy(category) {\n    if (category == 'all'){\n      this.setState({ products: this.props.products })\n    } else {\n      let filtered = _.filter(this.props.products, function (o) {\n        return o.category == category;\n      });\n      this.setState({products: filtered})\n    }\n  }\n\n  resetSorts() {\n    this.setState({ products: this.props.products });\n  }\n\n  render() {\n    return (\n      <div className='row'>\n        <div className=\"row\">\n          <div className=\"col-8 searchbar\">\n            <span className=\"search-heading\">{\"Search:\"}</span> <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n          </div>\n          <div className=\"col-4 sort\">\n            <div className=\"cat-select\">\n              <span className=\"category-heading\">{\"Category:\"}</span>\n              <select id=\"categories\" name=\"categories\" onChange={this.handleFilter}>\n                {this.getCategories()}\n                <option value=\"all\">All</option>\n              </select>\n            </div>\n            <div className=\"sort-select\">\n              <span className=\"sort-heading\">{\"Sort by:\"}</span>\n              <select id=\"sort\" name=\"sort\" onChange={this.handleSort}>\n                <option value=\"created-at\">Date Added</option>\n                <option value=\"num-orders\">Popularity</option>\n                <option value=\"quantity\">Quantity Available</option>\n              </select>\n              <button id='resetbtn' className='btn btn-warning' onClick={this.resetSorts}>Reset</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          {this.showProducts()}\n          <SearchResults\n            value={this.state.value}\n            data={this.state.products}\n            renderResults={results => (\n              this.showProducts(results)\n            )}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Products\n","import React, {Component} from 'react';\nimport Products from \"./Products\";\n\nclass Order extends Component{\n\n    render(){\n        return(\n                <div>\n                    <h1>Order page</h1>\n                    <Products {...this.props}/>\n                </div>\n            )   \n        }\n}\n\nexport default Order;","import React, { Component } from 'react'\nimport _ from \"lodash\";\nimport './ShoppingCart.css'\n\nclass ShoppingCart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product_id: ''\n    }\n  }\n\n  showProducts(productsArray) {\n    if(productsArray) {\n      return(\n        productsArray.map((product) => {\n          return(\n          <div key={product.product_id} className='col-3 item'>\n            <img src={product.image_url} alt={product.name}/>\n            <h3>{product.name.slice(0, 25)} ...</h3>\n            <p>Category: {product.category}</p>\n            <p>Quantity available: {product.quantity}</p>\n            <p>{product.description.slice(0, 30)}...</p>\n            <p>Provided by: <a href=\"\">{this.matchUser(product.user_id)}</a></p>\n            <p>Posted: {Math.floor(Math.abs(new Date() - new Date(product.created_at))/1000/60/60/24)} days ago</p>\n          </div>\n          )\n        })\n      )\n    } else {\n      return '';\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"shoppingCart\">\n        {this.props.loggedInStatus ? (\n          <div className=\"shoppingCart\">\n            <h1>Shopping Cart</h1>\n            <p>{this.showProducts()}</p> // pass through product id to grab product info\n          </div>\n          ) : (\n            <h1>Please Sign in to see your cart</h1>\n        )}\n      </div>\n    )\n  }\n}\n\n//\n// //create a stateless component to display the shopping cart items\n// export const ShoppingCart = (props) => {\n//     //if the shopping cart has no items, let user know the cart is empty.\n//     if (props.product.length === 0) {\n//         return (\n//             <div className=\"EmptyCart\">\n//                 <Header Product={props.Product}/>\n//                 Nothing in Cart, please add something.\n//             </div>)\n//     } else{\n//         return (\n//         <div className=\"shoppingCart\" id=\"shoppingCartScroll\" onClick={(e) => props.lockScroll(e)}>\n//             <Header Product={props.Product}/>\n//             <ProductDisplay removeItem={props.removeItem} productUpdate={props.productUpdate} items={props.items} checkout={props.checkout} Prices={props.Prices} />\n//         </div>)\n//     };\n// }\n//\n//\n// //similar function to TypeSelector, see notes on TypeSelector\n// class Quantity extends React.Component {\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             quantity: this.props.quantity,\n//         }\n//         this.handleQuantityChange = this.handleQuantityChange.bind(this);\n//     }\n//\n//     handleQuantityChange = async (e) => {\n//         const userInput = e.target.value;\n//         await this.setState({quantity: userInput})\n//         this.props.quantityCallBack(this.state.quantity)\n//     }\n//\n//     render(){\n//         return(\n//             <td>\n//                 <input\n//                     name=\"number\"\n//                     type=\"number\"\n//                     value={this.state.quantity}\n//                     onChange={this.handleQuantityChange}\n//                     max=\"10\"\n//                     min=\"1\"/>\n//             </td>\n//         )\n//     }\n// }\n//\n// //A function to display all the cart items the user selected and allow them to change type, size, and quantity\n// class ProductDisplay extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.productUpdate = this.productUpdate.bind(this);\n//     }\n//\n//     //update products upon any change.\n//     productUpdate = (size, type, quantity, index) => {\n//         this.props.productUpdate(size, type, quantity, index);\n//     }\n//\n//     //simple render function\n//     render() {\n//         return (\n//             <div className=\"cartList\">\n//                 {this.props.items.map((currItem, index)=>\n//                     <Display item={currItem} removeItem={this.props.removeItem} index={index} key={index} productUpdate={this.productUpdate} ppPrices={this.props.ppPrices} mgmPrices={this.props.mgmPrices} />\n//                 )}\n//                 <div className=\"checkoutButton\" onClick={(e) => this.props.checkout()}>Checkout</div>\n//             </div>\n//         )\n//     }\n// }\n//\n//component that handles the display of each individual product\n// class Display extends React.Component{\n//     //will update size, type and quantity in this component, then send values to parent product display\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             quantity: this.props.item.order.quantity,\n//         }\n//         this.quantityCallBack = this.quantityCallBack.bind(this);\n//     }\n//\n//     //get quantity from child, then send to parent(ProductDisplay)\n//     quantityCallBack = (changedQuantity) => {\n//         this.setState({\n//             quantity: changedQuantity,\n//             total: this.state.price*changedQuantity\n//         })\n//         this.props.productUpdate(this.state.size, this.state.type, this.state.quantity, this.props.index)\n//     }\n//\n//     removeItem = (index) => {\n//         this.props.removeItem(index);\n//     }\n//\n//     //render individual item\n//     render() {\n//         return (\n//             <div key={this.props.index} className=\"CartItem\">\n//                 <figure>\n//                     <img src={this.props.item.Img.src} alt={this.props.item.Img.name} id={this.props.index} />\n//                     <figcaption onClick={(e) => this.removeItem(this.props.index)}>Remove</figcaption>\n//                 </figure>\n//                 <form>\n//                     <table className=\"ContentInformation\"><tbody>\n//                         <tr>\n//                             <td><b>Image Description: </b></td>\n//                             <td>{this.props.item.Img.description}</td>\n//                         </tr>\n//                         <tr>\n//                             <td><b>Quantity:</b></td>\n//                             <Quantity quantityCallBack={this.quantityCallBack} quantity={this.state.quantity} />\n//                         </tr>\n//                         <tr>\n//                             <td><b>Price Per:</b></td>\n//                             <td>${this.state.price}.00</td>\n//                         </tr>\n//                         <tr>\n//                             <td><b>Total:</b></td>\n//                             <td>${this.state.total}.00</td>\n//                         </tr>\n//                         </tbody></table>\n//                 </form>\n//             </div>\n//         )\n//     }\n// }\n//\n// //simple header that changes if the site is mobile or not.\n// const Header = (props) =>{\n//     if(props.notMobile){\n//         return(<h3>Shopping Cart<br/>Click Inside Cart to Lock Main Page Scrolling<br/>Click Edges to Unlock</h3>)\n//     } else {\n//         return(<h3>Shopping Cart</h3>)\n//     }\n// }\n\nexport default ShoppingCart;\n","import React, { Component } from 'react';\n\nimport NavBar from './NavBar';\nimport About from './About';\nimport Home from './Home';\nimport Signup from './Signup';\nimport Signin from './Signin';\nimport MyProfile from './MyProfile';\nimport Order from './Order';\nimport ShoppingCart from './ShoppingCart';\n\n\nimport './App.css';\n\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport axios from 'axios';\n\nimport { config } from '../Constants' // get prod/dev urls\nlet FRONT_END_URL = config.url.FRONT_END_URL;\nlet BACK_END_URL = config.url.API_URL;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      PRODUCT_URL: `${BACK_END_URL}/products`,\n      USER_URL: `${BACK_END_URL}/users`,\n      isLoggedIn: false,\n      user: {},\n      users: [],\n      products: [],\n      sendToCart: ''\n     };\n\n    this.fetchProducts = this.fetchProducts.bind(this);\n    this.fetchUsers = this.fetchUsers.bind(this);\n    this.fetchProducts();\n    this.fetchUsers();\n  }\n\n  fetchProducts() {\n    axios.get(this.state.PRODUCT_URL)\n      .then(response => {\n        if (response.data) {\n          this.setState({ products: response.data });\n        } else {\n          this.setState({\n            errors: response.data.errors\n          })\n        }\n      })\n  }\n\n  fetchUsers() {\n    axios.get(this.state.USER_URL)\n      .then(response => {\n        if (response.data) {\n          this.setState({ users: response.data.users });\n        } else {\n          this.setState({\n            errors: response.data.errors\n          })\n        }\n      })\n  }\n\n  componentDidMount() {\n    this.loginStatus()\n  }\n\n    loginStatus = () => {\n      axios.get(`${BACK_END_URL}/logged_in`,\n     {withCredentials: true})\n      .then(response => {\n        if (response.data.logged_in) {\n          this.handleLogin(response)\n        } else {\n          this.handleLogout()\n        }\n      })\n      .catch(error => console.log('api errors:', error))\n    }\n\n  handleLogin = (data) => {\n    this.setState({\n      isLoggedIn: true,\n      user: data.user //BUG doesnt set right? \n    })\n  }\n\n  handleLogout = () => {\n    axios.delete(`${BACK_END_URL}/logout`).then(\n    this.setState({\n      isLoggedIn: false,\n      user: {}\n    })\n    )\n    }\n\n  handleUserEdit = (user) => {\n    this.setState({\n      user: user\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <NavBar handleLogout={this.handleLogout} userID={this.state.user} loggedInStatus={this.state.isLoggedIn}/>\n          <div className='content'>\n            <div className='body'>\n                <Switch>\n                  <Route exact path='/about' component={About}/>\n                  <Route exact path='/sign-up' render={props => (\n                    <Signup handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>)}\n                  />\n                  <Route exact path='/sign-in' render={props => (\n                    <Signin handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>)}\n                  />\n                  <Route exact path='/order' render={props => (<Order user={this.state.user} loggedInStatus={this.state.isLoggedIn} users={this.state.users} products={this.state.products} />)} /> \n                <Route exact path='/shoppingcart' render={props => (\n                    <ShoppingCart handleLogout={this.handleLogout} loggedInStatus={this.state.isLoggedIn}/>)}\n                  />\n                  <Route exact path='/profile' render={props => (\n                    <MyProfile user={this.state.user} loggedInStatus={this.state.isLoggedIn} handleUserEdit={this.handleUserEdit}/>)}\n                  />\n                  <Route exact path='/' render={props => (\n                    <Home handleLogout={this.handleLogout} loggedInStatus={this.state.isLoggedIn}/>)}\n                  />\n              </Switch>\n            </div>\n          </div>\n          {/* <Footer/> */}\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}