{"version":3,"sources":["Constants.js","components/NavBar.jsx","components/About.js","components/MapContainer.jsx","helpers.js","components/AddressConverter.jsx","components/Home.jsx","components/Signup.jsx","components/Signin.jsx","components/MyProfile.jsx","components/MyProducts.jsx","components/Products.jsx","components/Order.jsx","components/ShoppingCart.jsx","components/ProductView.jsx","components/App.js","serviceWorker.js","index.js"],"names":["config","url","API_URL","FRONT_END_URL","NavBar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","this","props","loggedInStatus","onClick","handleLogout","userID","name","Component","Home","CENTRE_OF_AUSTRALIA","lat","lng","style","width","height","containerStyle","position","left","MapContainer","state","console","log","google","zoom","isLoggedIn","initialCenter","user","products","map","product","coords","key","GoogleApiWrapper","apiKey","process","fetchGPS","address","SERVER_URL","axios","get","AddressConverter","coordinates","_handleChange","bind","_handleSubmit","event","setState","target","value","preventDefault","then","results","gpsCoords","data","geometry","location","onSubmit","placeholder","onChange","BACK_END_URL","Signup","handleChange","handleSubmit","email","password","password_confirmation","post","withCredentials","response","status","handleLogin","redirect","errors","catch","error","history","push","handleErrors","Signin","logged_in","withRouter","MyProfile","patch","isChange","handleUserEdit","for","distance","require","Products","handleClick","product_id","sendToCart","updateCart","userGPS","selectedProduct","showProducts","matchUser","getCategories","handleSort","resetSorts","filterBy","handleFilter","productRedirect","user_id","users","length","_","findIndex","allCategories","category","filter","item","i","ar","indexOf","sorted","orderBy","sortByQuantity","sortByRecent","prod_id","viewProduct","productsArray","src","image_url","alt","href","slice","quantity","description","Math","floor","abs","Date","created_at","round","parseInt","pathname","filtered","o","renderResults","Order","propsIn","ShoppingCart","Product","updatedCart","p","product_ids","productId","ProductView","fullProduct","matchProduct","productSelect","index","App","loginStatus","delete","PRODUCT_URL","USER_URL","fetchProducts","fetchUsers","exact","path","component","About","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7adfec7f.chunk.js","sourcesContent":["// Constants.js\nconst prod = {\n    url: {\n        API_URL: \"https://covid-co-op.herokuapp.com\",\n        FRONT_END_URL: \"https://joshjm.github.io/Covid-Co-op\"\n     }\n   };\nconst dev = {\n    url: {\n        API_URL: \"https://covid-co-op.herokuapp.com\", // rails - start first\n        FRONT_END_URL: \"http://localhost:3001\" // react\n    }\n   };\nexport const config = process.env.NODE_ENV === \"development\" ? dev : prod;\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\n\nimport './NavBar.css'\nimport { config } from '../Constants' // get prod/dev urls\nlet FRONT_END_URL = config.url.FRONT_END_URL;\nlet BACK_END_URL = config.url.API_URL;\n\nclass NavBar extends Component{\n    render(){\n        return(\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light static-top mb-5 shadow\">\n                <Link to=\"/\" className=\"navbar-brand\">Covid Coop⚕</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\"\n                    aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                    {this.props.loggedInStatus ? (\n                        <ul className=\"navbar-nav ml-auto \">\n                            <li className=\"nav-item\">\n                                <Link to=\"/\" className=\"nav-link\" onClick={this.props.handleLogout}>Click to log out {this.props.userID.name}</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to='/' className=\"nav-link\">Home</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to='/order' className=\"nav-link\">Place order</Link>\n                            </li>\n                            {/* TODO conditionally render only if cart.length>1 */}\n                            <li className=\"nav-item\">\n                                <Link to='/shoppingcart' className=\"nav-link\">View Cart</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to='/my-products' className=\"nav-link\">My Products</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to='/profile' className=\"nav-link\">My Profile</Link>\n                            </li>\n                        </ul>\n                    ):(\n                        <ul className=\"navbar-nav ml-auto \">\n                            <li className=\"nav-item\">\n                                <Link to='/' className=\"nav-link\">Home</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to='/sign-up' className=\"nav-link\">Sign up</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to='/sign-in' className=\"nav-link\">Sign in</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to='/order' className=\"nav-link\">Place order</Link>\n                            </li>\n                        </ul>\n                    )}\n                </div>\n            </nav>\n        )\n    }\n}\nexport default NavBar;\n","import React, {Component} from 'react';\n\nclass Home extends Component{\n    render(){\n    return(\n            <div>\n                <h1>About page</h1>\n            </div>\n        )   \n    }\n}\n\nexport default Home;","import React, {Component} from \"react\";\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport './MapContainer.css';\n\nconst google_api_key = process.env.REACT_APP_GOOGLE_API_KEY\nconst CENTRE_OF_AUSTRALIA = {lat: -25.363, lng: 134.211}\nconst style = {\n\twidth: '100%',\n\theight: '100%'\n}\nconst containerStyle = {\n\tposition: 'relative',  \n\tleft: '0',\n\twidth: '100%',\n\theight: '500px'\n}\n\nexport class MapContainer extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t}\n\t\tconsole.log(this.props);\n\n\t};\n\n\trender(){\n\t\treturn (\n\t\t\t<Map \n\t\t\tgoogle={this.props.google}\n\t\t\tzoom={this.props.isLoggedIn ? 8 : 4}\n\t\t\tstyle={style}\n\t\t\tcontainerStyle={containerStyle}\n\t\t\t// centre on user if logged in\n\t\t\tinitialCenter={this.props.isLoggedIn ? {lat: this.props.user.lat, lng: this.props.user.lng} : CENTRE_OF_AUSTRALIA}\n\n\t\t\t>\n\t\t\t{this.props.products.map((product) => {\n\t\t\t\tlet coords = {lat: product.lat, lng: product.lng} \n\t\t\t\treturn(\n\t\t\t\t\t<Marker\n\t\t\t\t\t\tkey={product.id}\n\t\t\t\t\t\tname={product.name}\n\t\t\t\t\t\tposition={coords}\n\t\t\t\t\t>\n\t\t\t\t\t</Marker>\t\n\t\t\t\t)\n\n\t\t\t})}\n\t\t\n\t\t\t</Map>\n\t\t);\n\t}\n}\n// export default MapContainer;\nexport default GoogleApiWrapper({\n\tapiKey: google_api_key\n})(MapContainer);","import axios from \"axios\";\n\nexport function fetchGPS (address){\n    const google_api_key = process.env.REACT_APP_GOOGLE_API_KEY;\n    const RESPONSE_TYPE = \"json\";\n    const SERVER_URL = `https://maps.googleapis.com/maps/api/geocode/${RESPONSE_TYPE}?`;\n    return axios.get(`${SERVER_URL}key=${google_api_key}&address=${address}`)   \n}\nexport default null;","import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport {fetchGPS} from \"../helpers\";\n\nclass AddressConverter extends Component{\n    constructor(){\n        super(); // necessary\n        this.state={ // where we define the variables we want to store and sahre across the component\n            coordinates: {lat: null,  lng: null}, \n            address: '',\n        }\n        this._handleChange = this._handleChange.bind(this); // allows these functions to access `this'\n        this._handleSubmit = this._handleSubmit.bind(this);\n    }\n\n    \n    _handleChange(event){\n        this.setState({address: event.target.value});\n    }\n\n\n    _handleSubmit(event){\n        event.preventDefault();\n        fetchGPS(this.state.address).then((results) =>{ // returns promise of results\n            let gpsCoords = results.data.results[0].geometry.location;\n            this.setState({ coordinates: gpsCoords });\n        });\n    }\n    render(){\n\n        return(\n            <div className=\"container\">\n                <h2> convert address to gps </h2>\n                <form onSubmit={this._handleSubmit}>\n                    <input type=\"text\" placeholder=\"address\" onChange={this._handleChange} /> \n                    <button>Submit</button>\n                </form>\n                <div className=\"output-display\">\n                    {`lat: ${this.state.coordinates.lat}, lng: ${this.state.coordinates.lng},` }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddressConverter;","import React, {Component} from 'react';\nimport axios from 'axios'\nimport {Link} from 'react-router-dom';\nimport  MapContainer  from './MapContainer';\nimport  AddressConverter  from './AddressConverter';\nimport './Home.css';\nimport { config } from '../Constants' // get prod/dev urls\nimport { Redirect } from 'react-router-dom'\n\nlet FRONT_END_URL = config.url.FRONT_END_URL;\nlet BACK_END_URL = config.url.API_URL;\n\n\nclass Home extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      user: {}\n     };\n  }\n\n  render(){\n  return(\n          <div>\n              <h1>Covid Coop Home</h1>\n              {/* google={window.google} */}\n              <MapContainer {...this.props} />\n              <AddressConverter />\n          </div>\n      )\n  }\n}\n\nexport default Home;\n","import React, {useState, Component}  from 'react';\nimport './Signup.css';\nimport axios from 'axios';\nimport { render } from '@testing-library/react';\nimport { config } from '../Constants' // get prod/dev urls\nlet FRONT_END_URL = config.url.FRONT_END_URL;\nlet BACK_END_URL = config.url.API_URL;\n\nclass Signup extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: 'test@test.com',\n      password: 'chicken',\n      password_confirmation: 'chicken',\n      address: '',\n      errors: '',\n    };\n  }\n\n  handleChange = (event) => {\n      const {name, value} = event.target\n      this.setState({\n        [name]: value\n      })\n    };\n\n  handleSubmit = (event) => {\n      event.preventDefault()\n      // convert address to GPS here\n      const {email, password, password_confirmation, address} = this.state\n  let user = {\n    email: email,\n    password: password,\n    password_confirmation: password_confirmation,\n    location: address\n  }\n    axios.post(BACK_END_URL+'/users', user, {withCredentials: true})\n  .then(response => {\n    console.log(response);\n    console.log(\"flag\");\n    if (response.data.status === 'created') {\n      this.props.handleLogin(response.data)\n      this.redirect()\n    } else {\n      this.setState({\n        errors: response.data.errors\n      })\n    }\n  })\n  .catch(error => console.log('api errors:', error))\n  };\n\n  redirect = () => {\n    this.props.history.push('/')\n  }\n\n  handleErrors = () => {\n    return (\n      <div>\n        <ul>{this.state.errors.map((error) => {\n          return <li key={error}>{error}</li>\n        })}\n        </ul>\n      </div>\n    )\n  }\n\n    render(){\n      const {email, password, password_confirmation, address} = this.state\n\n        return(\n            <div className='row justify-content-md-center'>\n                <div className=\"col-md-6\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h2 className = \"center\">Sign Up</h2>\n                              <form onSubmit={this.handleSubmit}>\n                                <div className=\"form-group\">\n                                    <label >Email</label>\n                                    <input\n                                      className=\"form-control\"\n                                      name=\"email\"\n                                      type=\"email\"\n                                      id=\"email\"\n                                      placeholder=\"Email\"\n                                      onChange={this.handleChange}\n                                      value={this.state.email}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label >Password</label>\n                                    <input\n                                      className=\"form-control\"\n                                      type=\"password\"\n                                      name=\"password_confirmation\"\n                                      id=\"password\"\n                                      placeholder=\"Password\"\n                                      onChange={this.handleChange}\n                                      value={this.state.password}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label > Confirm Password</label>\n                                    <input\n                                      className=\"form-control\"\n                                      type=\"password\"\n                                      name=\"password\"\n                                      id=\"password-confirmation\"\n                                      placeholder=\"Password\"\n                                      onChange={this.handleChange}\n                                      value={this.state.password_confirmation}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label >Address</label>\n                                    <input\n                                      className=\"form-control\"\n                                      type=\"text\"\n                                      name=\"address\"\n                                      id=\"address\"\n                                      placeholder=\"address\"\n                                      onChange={this.handleChange}\n                                      value={this.state.address}\n                                    />\n                                </div>\n                                <button type=\"submit\" id=\"submit-btn\" className=\"btn btn-primary\">Submit</button>\n                              </form>\n\n                                <div>\n                                  {\n                                    this.state.errors ? this.handleErrors() : null\n                                  }\n                                </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Signup;\n","import React, {Component}  from 'react';\nimport './Signin.css';\nimport axios from 'axios'\nimport {Redirect, withRouter } from 'react-router-dom';\nimport { config } from '../Constants' // get prod/dev urls\nlet FRONT_END_URL = config.url.FRONT_END_URL;\nlet BACK_END_URL = config.url.API_URL;\n\n\nclass Signin extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: 'josh@gmail.com',\n      password: 'chicken',\n      errors: ''\n     };\n  }\n\n  handleChange = (event) => {\n    const {name, value} = event.target\n    this.setState({\n      [name]: value\n    })\n  };\n\n  handleSubmit = (event) => {\n      event.preventDefault()\n      const {email, password} = this.state\n\n      let user = {\n        email: email,\n        password: password\n      }\n\n      axios.post(BACK_END_URL+'/login', {user}, {withCredentials: true})\n        .then(response => {\n          if (response.data.logged_in) {\n            this.props.handleLogin(response.data);\n            this.props.history.push(\"/\") //doing redirect here.\n\n          } else {\n            this.setState({\n              errors: response.data.errors\n            })\n          }\n        })\n        .catch(error => console.log('api errors:', error))\n    };\n\n\n    handleErrors = () => {\n        return (\n          <div>\n            <ul>\n            {this.state.errors.map(error => {\n            return <li key={error}>{error}</li>\n              })}\n            </ul>\n          </div>\n        )\n      }\n\n    render(){\n      const {email, password} = this.state\n\n        return(\n            <div className='row justify-content-md-center'>\n                <div className=\"col-md-6\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h2 className = \"center\">Sign In</h2>\n                              <form onSubmit={this.handleSubmit}>\n                                <div className=\"form-group\">\n                                    <label>Email</label>\n                                    <input\n                                      className=\"form-control\"\n                                      name=\"email\"\n                                      type=\"email\"\n                                      id=\"email\"\n                                      placeholder=\"Email\"\n                                      value={this.state.email}\n                                      onChange={this.handleChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label >Password</label>\n                                    <input\n                                      className=\"form-control\"\n                                      name=\"password\"\n                                      type=\"password\"\n                                      id=\"password\"\n                                      placeholder=\"Password\"\n                                      value={this.state.password}\n                                      onChange={this.handleChange}\n                                    />\n                                </div>\n                                <button type=\"submit\" id=\"submit-btn\" className=\"btn btn-primary\">Sign In</button>\n                              </form>\n                              <div>\n                                {this.state.errors ? this.handleErrors() : null}\n                              </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Signin);\n","import React, {useState, Component}  from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './MyProfile.css';\nimport axios from 'axios';\nimport { render } from '@testing-library/react';\nimport { config } from '../Constants' // get prod/dev urls\nlet FRONT_END_URL = config.url.FRONT_END_URL;\nlet BACK_END_URL = config.url.API_URL;\n\nclass MyProfile extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      password_confirmation: '',\n      location:'',\n      errors: '',\n      isChange: false,\n      SERVER_URL: BACK_END_URL\n     };\n     this.redirect = this.redirect.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      email: this.props.user.email,\n      location: this.props.user.location\n    })\n  }\n\n  handleChange = (event) => {\n    const {name, value} = event.target\n    this.setState({\n      [name]: value\n    })\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    const {email, password, password_confirmation, location} = this.state\n    let user = {\n      email: email,\n      password: password,\n      password_confirmation: password_confirmation,\n      location: location\n    }\n    axios.patch(`${BACK_END_URL}/users/${this.props.user.id}.json`, user, {withCredentials: true})\n    .then(response => {\n      console.log(response)\n      this.setState ({\n        isChange: true\n      })\n      // update user details\n      this.props.handleUserEdit(response.data);\n      this.props.handleLogin(response.data)\n    })\n\n    .catch(error => console.log('api errors:', error))\n  };\n\n  redirect = () => {\n    this.props.history.push('/')\n  }\n\n  handleErrors = () => {\n    return (\n      <div>\n        <ul>{this.state.errors.map((error) => {\n          return <li key={error}>{error}</li>\n        })}\n        </ul>\n      </div>\n    )\n  }\n\n  render(){\n    const {email, password, password_confirmation, location} = this.state\n\n    return(\n      this.state.isChange ? < Redirect to='/' /> :\n      <div className='row justify-content-md-center'>\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h2 className = \"center\">Update User Details</h2>\n                <form onSubmit={this.handleSubmit}>\n                  <div className=\"form-group\">\n                    <label for=\"email\">Email</label>\n                    <input\n                      className=\"form-control\"\n                      name=\"email\"\n                      type=\"email\"\n                      id=\"email\"\n                      placeholder=\"Email\"\n                      onChange={this.handleChange}\n                      value={this.state.email}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"password\">Update Password</label>\n                    <input\n                      className=\"form-control\"\n                      type=\"password\"\n                      name=\"password_confirmation\"\n                      id=\"password\"\n                      placeholder=\"Password\"\n                      onChange={this.handleChange}\n                      value={this.state.password}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"password-confirmation\">Confirm Password</label>\n                    <input\n                      className=\"form-control\"\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password-confirmation\"\n                      placeholder=\"Password\"\n                      onChange={this.handleChange}\n                      value={this.state.password_confirmation}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"location\">Update Location</label>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      name=\"location\"\n                      id=\"location\"\n                      placeholder=\"Location\"\n                      onChange={this.handleChange}\n                      value={this.state.location}\n                    />\n                  </div>\n                  <button type=\"submit\" id=\"submit-btn\" className=\"btn btn-primary\">Submit</button>\n                </form>\n                <div>\n                  {this.state.errors ? this.handleErrors() : null}\n                </div>\n              </div>\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MyProfile;\n","import React, {useState, Component}  from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './MyProducts.css';\nimport axios from 'axios';\nimport { render } from '@testing-library/react';\nimport { config } from '../Constants' // get prod/dev urls\nlet FRONT_END_URL = config.url.FRONT_END_URL;\nlet BACK_END_URL = config.url.API_URL;\n\nclass MyProfile extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      password_confirmation: '',\n      location:'',\n      errors: '',\n      isChange: false,\n      SERVER_URL: BACK_END_URL\n     };\n  }\n\n  render(){\n    return(\n      <h1>My Products</h1>\n    )\n  }\n}\n\n\nexport default MyProfile;\n","import React, { Component } from 'react'\nimport _, { uniq } from \"lodash\";\nimport SearchResults from 'react-filter-search'\nimport { Redirect } from 'react-router-dom';\nimport './Products.css'\nimport {fetchGPS} from \"../helpers\";\nvar distance = require('gps-distance');\nexport class Products extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: '',\n      products: this.props.products,\n      sendToCart: '',\n      userGPS: {},\n      selectedProduct: ''\n    }\n\n    this.showProducts = this.showProducts.bind(this);\n    this.matchUser = this.matchUser.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.getCategories = this.getCategories.bind(this);\n    this.handleSort = this.handleSort.bind(this);\n    this.resetSorts = this.resetSorts.bind(this);\n    this.filterBy = this.filterBy.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.productRedirect = this.productRedirect.bind(this);\n    // store user's gps\n    if (this.props.loggedInStatus) {\n      fetchGPS(this.props.user.location).then((results) =>{ // returns promise of results\n        if (results.data.status ===\"ZERO_RESULTS\"){\n          console.log(\"user address not found\");\n        } else {\n        let gpsCoords = results.data.results[0].geometry.location;\n        this.setState({ userGPS: gpsCoords });\n        }\n      })\n    }\n  }\n\n  matchUser(user_id) {\n    if (this.props.users.length > 0) {\n      return this.props.users[_.findIndex(this.props.users, { id: user_id })].name;\n    } else {\n      return '';\n    }\n  }\n\n  handleClick = (product_id) => {\n    this.setState({ sendToCart: product_id })\n    this.props.updateCart(product_id)\n  }\n\n  getCategories() {\n    let allCategories = [];\n    if (this.props.products){\n      this.props.products.map((product) => {\n        allCategories.push(product.category);\n      });\n      let unique = allCategories.filter((item, i, ar) => ar.indexOf(item) === i);\n      return unique.map((category) => {\n        return (<option value={category} key={category}> {category} </option>)\n      });\n    }\n  }\n\n  sortByQuantity() {\n    let sorted = _.orderBy(this.props.products, 'quantity', 'desc');\n    this.setState({products: sorted});\n  }\n\n  sortByRecent() {\n    let sorted = _.orderBy(this.props.products, 'created_at', 'desc');\n    this.setState({ products: sorted });\n  }\n\n  handleSort(event) {\n    let key = event.target.value;\n    if (key === 'quantity') {\n      this.sortByQuantity()\n    }\n    if (key === 'created-at') {\n      this.sortByRecent()\n    }\n  }\n\n  handleFilter(event) {\n    let category = event.target.value;\n    this.filterBy(category);\n  }\n\n  handleChange = (event) => {\n    const { value } = event.target;\n    this.setState({ value });\n  };\n\n  productRedirect(event, prod_id) {\n    event.preventDefault();\n    this.setState({selectedProduct: prod_id})\n    this.props.viewProduct(prod_id);\n  }\n\n    showProducts(productsArray) {\n        if(productsArray) {\n            return(\n                productsArray.map((product) => {\n                  // get products GPS location\n                  let productGPS = {}\n                  fetchGPS(product.address).then((results) =>{ // returns promise of results\n                    if (results.data.status ===\"ZERO_RESULTS\"){\n                      console.log(\"address not found\");\n                    } else {\n                    productGPS = results.data.results[0].geometry.location;\n                    }\n                  })\n\n                  // render product card\n                  return(\n                    <div key={product.id} className='col-3 item'>\n                        <img className='thumbnail' src={product.image_url} alt={product.name}/>\n                      <a href=\"\" onClick={(event) => {\n                        this.productRedirect(event, product.id);\n                      }} ><h3 key={product.id} >{product.name.slice(0, 25)} ...</h3></a>\n                        <p>Category: {product.category}</p>\n                        <p>Quantity available: {product.quantity}</p>\n                        <p>{product.description.slice(0, 30)}...</p>\n                            <p>Provided by: <a href=\"\">{this.matchUser(product.user_id)}</a></p>\n                        <p>Posted: {Math.floor(Math.abs(new Date() - new Date(product.created_at))/1000/60/60/24)} days ago</p>\n                        {this.props.loggedInStatus ? (\n                            <p>\n                              {Math.round(distance(parseInt(product.lat), parseInt(product.lng), this.state.userGPS.lat, this.state.userGPS.lng))}km away\n                            </p>\n                        ) : (\n                            <p>Location: {product.location}</p>\n                        )}\n                        {this.props.isLoggedIn ?\n                          <button type=\"button\" className=\"btn btn-success btn-sm\" onClick={() => {this.handleClick(product.id)}}>Add to Cart</button> : ''\n                        }\n                        {this.state.sendToCart ?\n                          <Redirect to={{pathname: \"/shoppingcart\", state: {product_id: this.state.sendToCart}}} /> : ''\n                        }\n                        {this.state.selectedProduct ? \n                          <Redirect to={{pathname: \"/productview\", state: {product_id: this.state.selectedProduct}}} /> : ''\n                        }\n                    </div>\n                    )\n                })\n            )\n        } else{\n            return '';\n        }\n      }\n  filterBy(category) {\n    if (category == 'all'){\n      this.setState({ products: this.props.products })\n    } else {\n      let filtered = _.filter(this.props.products, function (o) {\n        return o.category == category;\n      });\n      this.setState({products: filtered})\n    }\n  }\n\n  resetSorts() {\n    this.setState({ products: this.props.products });\n  }\n\n  render() {\n    return (\n      <div className='row'>\n        <div className=\"row\">\n          <div className=\"col-8 searchbar\">\n            <span className=\"search-heading\">{\"Search:\"}</span> <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n          </div>\n          <div className=\"col-4 sort\">\n            <div className=\"cat-select\">\n              <span className=\"category-heading\">{\"Category:\"}</span>\n              <select id=\"categories\" name=\"categories\" onChange={this.handleFilter}>\n                {this.getCategories()}\n                <option value=\"all\">All</option>\n              </select>\n            </div>\n            <div className=\"sort-select\">\n              <span className=\"sort-heading\">{\"Sort by:\"}</span>\n              <select id=\"sort\" name=\"sort\" onChange={this.handleSort}>\n                <option value=\"created-at\">Date Added</option>\n                <option value=\"num-orders\">Popularity</option>\n                <option value=\"quantity\">Quantity Available</option>\n              </select>\n              <button id='resetbtn' className='btn btn-warning' onClick={this.resetSorts}>Reset</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <SearchResults\n            value={this.state.value}\n            data={this.state.products}\n            renderResults={results => (\n              this.showProducts(results)\n            )}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Products\n","import React, {Component} from 'react';\nimport Products from \"./Products\";\n\nclass Order extends Component{\n\n    constructor(props) {\n        super(props);\n        this.propsIn = this.propsIn.bind(this);\n    }\n\n    propsIn() {\n        if(this.props.users.length > 0 && this.props.products.length > 0) {\n            return <Products users={this.props.users} products={this.props.products} updateCart={this.props.updateCart} isLoggedIn={this.props.isLoggedIn} viewProduct={this.props.viewProduct}/>\n        } else {\n            return '';\n        }\n    }\n\n    render(){\n        return(\n                <div>\n                    <h1>Order page</h1>\n                    {this.propsIn()}    \n                </div>\n            )\n        }\n}\n\nexport default Order;\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport _ from \"lodash\";\nimport App from './App'\nimport Products from './Products'\nimport './ShoppingCart.css'\n\nconst SERVER_URL = 'http://localhost:3000/products.json';\nconst PRODUCT_URL = 'http://localhost:3000/products/';\n\nclass ShoppingCart extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      product_ids: [],\n      quantity: '',\n      updatedCart: [],\n    }\n    this.Product = this.Product.bind(this)\n  }\n\n\n  componentDidMount() {\n    if (!this.props.location.state && !this.props.loggedInStatus) {\n      this.props.history.push('/sign-in')\n    } else if (this.props.location.state) {\n      let updatedCart = [];\n      this.props.sendToCart.map((productId) => {\n        updatedCart.push(_.filter(this.props.products, {id: productId})[0]);\n      });\n      this.setState({updatedCart: updatedCart})\n    }\n  }\n\n  Product = () => {\n    return (\n      this.state.updatedCart.map((p) => {\n          return(<div>\n            {p.name}\n            <img src={p.image_url}/>\n            {/*other properties of each product */}\n          </div>)\n        }\n      )\n    )\n  }\n\n  render() {\n    return(\n      <div className=\"shoppingCart\">\n        {this.props.loggedInStatus ? (\n          <div className=\"shoppingCart\">\n            <h1>Shopping Cart</h1>\n            {this.Product()}\n              {/* this.state.products.map((p) => <Product product={p} />)} */}\n          </div>\n          ) : (\n            <h1>Please Sign in to see your cart</h1>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default ShoppingCart;\n","import React, { Component } from 'react'\nimport _ from \"lodash\";\nimport { Redirect } from 'react-router-dom';\nimport './Products.css'\nvar distance = require('gps-distance');\n\nexport class ProductView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fullProduct: {},\n            sendToCart: ''\n        }\n        this.handleClick = this.handleClick.bind(this);\n        this.matchUser = this.matchUser.bind(this);\n    }\n\n    componentDidMount() {\n        this.matchProduct();\n    }\n\n    matchProduct() {\n        let product = _.filter(this.props.products, { id: this.props.productSelect })[0];\n        this.setState({fullProduct: product});\n    }\n\n    handleClick = (product_id) => {\n        this.setState({ sendToCart: product_id })\n        this.props.updateCart(product_id)\n    }\n\n    matchUser(user_id) {\n        if (this.props.users.length > 0) {\n            let index = _.findIndex(this.props.users, { 'id': user_id });\n            if(index >= 0) { return this.props.users[index].name }\n        } else {\n            return '';\n        }\n    }\n\n    render() {\n        const fullProduct = this.state.fullProduct;\n        if (fullProduct) {\n        return (\n            \n            <div key={fullProduct.id} className='container'>\n                <img className='fullsize' src={fullProduct.image_url} alt={fullProduct.name} />\n                <h3 key={fullProduct.id} >{fullProduct.name}</h3>\n                <p>Category: {fullProduct.category}</p>\n                <p>Quantity available: {fullProduct.quantity}</p>\n                <p>{fullProduct.description}</p>\n                <p>Provided by: {this.props.users ? this.matchUser(fullProduct.user_id) : ''}</p>\n                <p>Posted: {Math.floor(Math.abs(new Date() - new Date(fullProduct.created_at)) / 1000 / 60 / 60 / 24)} days ago</p>\n                {this.props.loggedInStatus ? (\n                    <p>\n                        {Math.round(distance(parseInt(fullProduct.lat), parseInt(fullProduct.lng), this.state.userGPS.lat, this.state.userGPS.lng))}km away\n                    </p>\n                ) : (\n                        <p>Location: {fullProduct.location}</p>\n                    )}\n                {this.props.isLoggedIn ?\n                    <button type=\"button\" className=\"btn btn-success btn-sm\" onClick={() => { this.handleClick(fullProduct.id) }}>Add to Cart</button> : ''\n                }\n                {this.state.sendToCart ?\n                    <Redirect to={{ pathname: \"/shoppingcart\", state: { product_id: this.state.sendToCart } }} /> : ''\n                }\n            </div>\n            \n        )\n            }\n            return ''\n    }\n}\n\nexport default ProductView\n","import React, { Component } from 'react';\n\nimport NavBar from './NavBar';\nimport About from './About';\nimport Home from './Home';\nimport Signup from './Signup';\nimport Signin from './Signin';\nimport MyProfile from './MyProfile';\nimport MyProducts from './MyProducts';\nimport Order from './Order';\nimport ShoppingCart from './ShoppingCart';\nimport ProductView from './ProductView';\n\n\nimport './App.css';\n\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport axios from 'axios';\n\nimport { config } from '../Constants' // get prod/dev urls\nlet FRONT_END_URL = config.url.FRONT_END_URL;\nlet BACK_END_URL = config.url.API_URL;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      PRODUCT_URL: `${BACK_END_URL}/products`,\n      USER_URL: `${BACK_END_URL}/users`,\n      isLoggedIn: false,\n      user: {},\n      users: [],\n      products: [],\n      sendToCart: [],\n      productSelect: ''\n     };\n\n    this.fetchProducts = this.fetchProducts.bind(this);\n    this.fetchUsers = this.fetchUsers.bind(this);\n    this.updateCart = this.updateCart.bind(this);\n    this.viewProduct = this.viewProduct.bind(this);\n    this.fetchProducts();\n    this.fetchUsers();\n  }\n\n  updateCart(product_id) {\n    this.setState({sendToCart: [product_id, ...this.state.sendToCart]})\n  }\n\n  viewProduct(product_id) {\n    this.setState({ productSelect: product_id })\n  }\n\n  fetchProducts() {\n    axios.get(this.state.PRODUCT_URL)\n      .then(response => {\n        if (response.data) {\n          this.setState({ products: response.data });\n\n        } else {\n          this.setState({\n            errors: response.data.errors\n          })\n        }\n      })\n  }\n\n  fetchUsers() {\n    axios.get(this.state.USER_URL)\n      .then(response => {\n        if (response.data) {\n          this.setState({ users: response.data.users });\n        } else {\n          this.setState({\n            errors: response.data.errors\n          })\n        }\n      })\n  }\n\n  componentDidMount() {\n    this.loginStatus()\n  }\n\n    loginStatus = () => {\n      axios.get(`${BACK_END_URL}/logged_in`,\n     {withCredentials: true})\n      .then(response => {\n        if (response.data.logged_in) {\n          this.handleLogin(response)\n        } else {\n          this.handleLogout()\n        }\n      })\n      .catch(error => console.log('api errors:', error))\n    }\n\n  handleLogin = (data) => {\n    this.setState({\n      isLoggedIn: true,\n      user: data.user //BUG doesnt set right?\n    })\n  }\n\n  handleLogout = () => {\n    axios.delete(`${BACK_END_URL}/logout`).then(\n    this.setState({\n      isLoggedIn: false,\n      user: {}\n    })\n    )\n    }\n\n  handleUserEdit = (user) => {\n    this.setState({\n      user: user\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <NavBar handleLogout={this.handleLogout} userID={this.state.user} loggedInStatus={this.state.isLoggedIn}/>\n          <div className='content'>\n            <div className='body'>\n                <Switch>\n                  <Route exact path='/about' component={About}/>\n                  <Route exact path='/sign-up' render={props => (\n                    <Signup handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>)}\n                  />\n                  <Route exact path='/sign-in' render={props => (\n                    <Signin handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>)}\n                  />\n                  <Route exact path='/order' render={props => (\n                    <Order users={this.state.users} products={this.state.products} updateCart={this.updateCart} isLoggedIn={this.state.isLoggedIn} viewProduct={this.viewProduct} />)}\n                  />{/* keep me at the bottom */}\n                  <Route exact path='/shoppingcart' render={props => (\n                    <ShoppingCart {...props} handleLogout={this.handleLogout} sendToCart={this.state.sendToCart} products={this.state.products} loggedInStatus={this.state.isLoggedIn}/>)}\n                  />\n                  <Route exact path='/profile' render={props => (\n                    <MyProfile user={this.state.user} loggedInStatus={this.state.isLoggedIn} handleUserEdit={this.handleUserEdit}/>)}\n                  />\n                  <Route exact path='/my-products' render={props => (\n                    <MyProducts user={this.state.user} loggedInStatus={this.state.isLoggedIn} />)}\n                  />\n                  <Route exact path='/productview' render={props => (\n                  <ProductView users={this.state.users} products={this.state.products} productSelect={this.state.productSelect} isLoggedIn={this.state.isLoggedIn} />)}\n                  />\n                  <Route exact path='/' render={props => (\n                    <Home handleLogout={this.handleLogout} {...this.state} loggedInStatus={this.state.isLoggedIn} />)}\n                  />\n              </Switch>\n            </div>\n          </div>\n          {/* <Footer/> */}\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}