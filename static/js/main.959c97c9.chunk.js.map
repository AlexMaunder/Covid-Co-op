{"version":3,"sources":["components/NavBar.jsx","components/About.js","components/MapContainer.jsx","components/AddressConverter.jsx","components/Home.jsx","components/Signup.jsx","components/Signin.jsx","components/Products.jsx","components/Order.jsx","components/Cart.jsx","components/App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Home","CENTRE_OF_AUSTRALIA","lat","lng","MapContainer","compose","withProps","googleMapURL","process","loadingElement","style","height","containerElement","mapElement","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","isMarkerShown","position","SERVER_URL","AddressConverter","state","coordinates","address","_handleChange","bind","_handleSubmit","axios","get","then","results","setState","data","geometry","location","event","this","target","value","preventDefault","fetchGPS","onSubmit","placeholder","onChange","handleClick","delete","withCredentials","response","handleLogout","history","push","catch","error","console","log","isLoggedIn","user","loggedInStatus","onClick","Signup","handleChange","name","handleSubmit","email","password","password_confirmation","post","status","handleLogin","redirect","errors","handleErrors","map","key","class","for","Signin","logged_in","Products","showProducts","matchUser","user_id","users","length","_","findIndex","products","product","src","image_url","alt","width","category","quantity","description","slice","href","Math","floor","abs","Date","created_at","Order","propsIn","Cart","App","loginStatus","PRODUCT_URL","USER_URL","fetchProducts","fetchUsers","exact","path","component","About","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"oXAyCeA,G,8KAlCP,OACI,yBAAKC,UAAU,wEACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBAAvB,oBACA,4BAAQA,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,oBAChFC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,qBAClE,0BAAMP,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BQ,GAAG,oBACzC,wBAAIR,UAAU,uBACd,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YAAvB,SAGJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMC,GAAG,WAAWD,UAAU,YAA9B,YAGJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMC,GAAG,WAAWD,UAAU,YAA9B,YAGJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,YAA5B,gBAGJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,YAA3B,qB,GA5BHS,cCONC,E,uKARX,OACQ,6BACI,+C,GAJGD,a,iCCQbE,EAAsB,CAACC,KAAM,OAAQC,IAAK,SAsBjCC,EArBMC,kBACnBC,oBAAU,CACRC,aAAa,+CAAD,OAJOC,0CAIP,8CAEZC,eAAgB,yBAAKC,MAAO,CAAEC,OAAO,UACrCC,iBAAkB,yBAAKF,MAAO,CAAEC,OAAO,WACvCE,WAAY,yBAAKH,MAAO,CAAEC,OAAO,YAEnCG,eACAC,gBATmBV,EAUnB,SAAAW,GAAK,OACL,kBAAC,YAAD,CAAWC,YAAa,EAAGC,cAAejB,GACvCe,EAAMG,eACH,6BACI,kBAAC,SAAD,CAAQC,SAAU,CAAElB,KAAM,OAAQC,IAAK,WACvC,kBAAC,SAAD,CAAQiB,SAAU,CAAElB,KAAM,OAAQC,IAAK,gBCtB7CkB,EAAU,uDADM,OACN,KA6CDC,E,kDA3CX,aAAc,IAAD,8BACT,gBACKC,MAAM,CACPC,YAAa,CAACtB,IAAK,KAAOC,IAAK,MAC/BsB,QAAS,IAEb,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBAPZ,E,qDAUJF,GAAS,IAAD,OACbI,IAAMC,IAAN,UAAaT,EAAb,eAfeb,0CAef,oBAAwDiB,IACvDM,MAAK,SAACC,GACP,EAAKC,SACD,CAACT,YAAaQ,EAAQE,KAAKF,QAAQ,GAAGG,SAASC,gB,oCAKzCC,GACVC,KAAKL,SAAS,CAACR,QAASY,EAAME,OAAOC,U,oCAE3BH,GACVA,EAAMI,iBACNH,KAAKI,SAASJ,KAAKf,MAAME,W,+BAIzB,OACI,yBAAKnC,UAAU,aACX,wDACA,0BAAMqD,SAAUL,KAAKV,eACjB,2BAAOpC,KAAK,OAAOoD,YAAY,UAAUC,SAAUP,KAAKZ,gBACxD,2CAEJ,yBAAKpC,UAAU,kBAAf,sCACiCgD,KAAKf,MAAMC,YAAYtB,IADxD,mBACsEoC,KAAKf,MAAMC,YAAYrB,W,GArC9EJ,aCoChBC,G,yDAlCb,WAAYgB,GAAQ,IAAD,8BACjB,cAAMA,IAOR8B,YAAc,WACZjB,IAAMkB,OAAO,+BAAgC,CAACC,iBAAiB,IAC9DjB,MAAK,SAAAkB,GACJ,EAAKC,eACL,EAAKC,QAAQC,KAAK,QAEnBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAZ5B,EAAK/B,MAAQ,CACXkC,YAAY,EACZC,KAAM,IAJS,E,qDAkBnB,OACQ,6BACI,iDAGEpB,KAAKtB,MAAM2C,eACX,kBAAC,IAAD,CAAMpE,GAAG,UAAUqE,QAAStB,KAAKQ,aAAjC,WACA,KAEF,kBAAC,EAAD,CAAe3B,eAAa,IAC1B,kBAAC,EAAD,W,GA7BGpB,c,SCmIJ8D,G,gEApIb,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IAYR8C,aAAe,SAACzB,GAAW,IAAD,EACAA,EAAME,OAArBwB,EADe,EACfA,KAAMvB,EADS,EACTA,MACb,EAAKP,SAAL,eACG8B,EAAOvB,KAhBK,EAoBnBwB,aAAe,SAAC3B,GACZA,EAAMI,iBADgB,MAEoC,EAAKlB,MAC/DmC,EAAO,CACTO,MAJwB,EAEfA,MAGTC,SALwB,EAERA,SAIhBC,sBANwB,EAEEA,sBAK1B/B,SAPwB,EAEyBX,SAOjDI,IAAMuC,KAAK,8BAA+BV,EAAM,CAACV,iBAAiB,IACnEjB,MAAK,SAAAkB,GACyB,YAAzBA,EAASf,KAAKmC,QAChB,EAAKrD,MAAMsD,YAAYrB,EAASf,MAChC,EAAKqC,YAEL,EAAKtC,SAAS,CACZuC,OAAQvB,EAASf,KAAKsC,YAI3BnB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,cAAeF,OAxCxB,EA2CnBiB,SAAW,WACT,EAAKvD,MAAMmC,QAAQC,KAAK,MA5CP,EA+CnBqB,aAAe,WACb,OACE,6BACE,4BAAK,EAAKlD,MAAMiD,OAAOE,KAAI,SAACpB,GAC1B,OAAO,wBAAIqB,IAAKrB,GAAQA,SAjD9B,EAAK/B,MAAQ,CACX0C,MAAO,gBACPC,SAAU,UACVC,sBAAuB,UACvB1C,QAAS,GACT+C,OAAQ,GACRnD,WAAY,qCARG,E,qDA0DR,IAAD,EACoDiB,KAAKf,MADzD,EACC0C,MADD,EACQC,SADR,EACkBC,sBADlB,EACyC1C,QAE7C,OACI,yBAAKmD,MAAM,iCACP,yBAAKA,MAAM,YACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,aACP,wBAAIA,MAAQ,UAAZ,WACE,0BAAMjC,SAAUL,KAAK0B,cACnB,yBAAKY,MAAM,cACP,2BAAOC,IAAI,SAAX,SACA,2BACED,MAAM,eACNb,KAAK,QACLvE,KAAK,QACLM,GAAG,QACH8C,YAAY,QACZC,SAAUP,KAAKwB,aACftB,MAAOF,KAAKf,MAAM0C,SAGxB,yBAAKW,MAAM,cACP,2BAAOC,IAAI,YAAX,YACA,2BACED,MAAM,eACNpF,KAAK,WACLuE,KAAK,wBACLjE,GAAG,WACH8C,YAAY,WACZC,SAAUP,KAAKwB,aACftB,MAAOF,KAAKf,MAAM2C,YAGxB,yBAAKU,MAAM,cACP,2BAAOC,IAAI,yBAAX,oBACA,2BACED,MAAM,eACNpF,KAAK,WACLuE,KAAK,WACLjE,GAAG,wBACH8C,YAAY,WACZC,SAAUP,KAAKwB,aACftB,MAAOF,KAAKf,MAAM4C,yBAGxB,yBAAKS,MAAM,cACP,2BAAOC,IAAI,WAAX,WACA,2BACED,MAAM,eACNpF,KAAK,OACLuE,KAAK,UACLjE,GAAG,UACH8C,YAAY,UACZC,SAAUP,KAAKwB,aACftB,MAAOF,KAAKf,MAAME,WAGxB,4BAAQjC,KAAK,SAASM,GAAG,aAAa8E,MAAM,mBAA5C,WAGA,6BAEItC,KAAKf,MAAMiD,OAASlC,KAAKmC,eAAiB,c,GA1HzD1E,cCwGN+E,G,yDAtGb,WAAY9D,GAAQ,IAAD,8BACjB,cAAMA,IAWR8C,aAAe,SAACzB,GAAW,IAAD,EACFA,EAAME,OAArBwB,EADiB,EACjBA,KAAMvB,EADW,EACXA,MACb,EAAKP,SAAL,eACG8B,EAAOvB,KAfO,EAmBnBwB,aAAe,SAAC3B,GACZA,EAAMI,iBADgB,MAEI,EAAKlB,MAE3BmC,EAAO,CACTO,MALoB,EAEfA,MAILC,SANoB,EAERA,UAOdrC,IAAMuC,KAAK,8BAA+B,CAACV,QAAO,CAACV,iBAAiB,IACjEjB,MAAK,SAAAkB,GACAA,EAASf,KAAK6C,WAChB,EAAK/D,MAAMsD,YAAYrB,EAASf,MAChC,EAAKqC,YAEL,EAAKtC,SAAS,CACZuC,OAAQvB,EAASf,KAAKsC,YAI3BnB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,cAAeF,OAvC9B,EA0CjBiB,SAAW,WACT,EAAKvD,MAAMmC,QAAQC,KAAK,MA3CT,EA8CjBqB,aAAe,WACX,OACE,6BACE,4BACC,EAAKlD,MAAMiD,OAAOE,KAAI,SAAApB,GACvB,OAAO,wBAAIqB,IAAKrB,GAAQA,SAjDhC,EAAK/B,MAAQ,CACX0C,MAAO,GACPC,SAAU,GACVM,OAAQ,IALO,E,iEASjB,OAAOlC,KAAKtB,MAAM2C,eAAiBrB,KAAKiC,WAAa,O,+BAiD5C,IAAD,EACoBjC,KAAKf,MADzB,EACC0C,MADD,EACQC,SAEZ,OACI,yBAAKU,MAAM,iCACP,yBAAKA,MAAM,YACP,yBAAKA,MAAM,QACP,yBAAKA,MAAM,aACP,wBAAIA,MAAQ,UAAZ,WACE,0BAAMjC,SAAUL,KAAK0B,cACnB,yBAAKY,MAAM,cACP,2BAAOC,IAAI,SAAX,SACA,2BACED,MAAM,eACNb,KAAK,QACLvE,KAAK,QACLM,GAAG,QACH8C,YAAY,QACZJ,MAAOF,KAAKf,MAAM0C,MAClBpB,SAAUP,KAAKwB,gBAGrB,yBAAKc,MAAM,cACP,2BAAOC,IAAI,YAAX,YACA,2BACED,MAAM,eACNb,KAAK,WACLvE,KAAK,WACLM,GAAG,WACH8C,YAAY,WACZJ,MAAOF,KAAKf,MAAM2C,SAClBrB,SAAUP,KAAKwB,gBAGrB,4BAAQtE,KAAK,SAASM,GAAG,aAAa8E,MAAM,mBAA5C,oB,GA7FX7E,c,kBCkDNiF,G,OAnDf,kDAEI,aAAe,IAAD,8BACV,gBACKC,aAAe,EAAKA,aAAatD,KAAlB,gBACpB,EAAKuD,UAAY,EAAKA,UAAUvD,KAAf,gBAHP,EAFlB,sDAYcwD,GACN,OAAI7C,KAAKtB,MAAMoE,MAAMC,OAAS,EACnB/C,KAAKtB,MAAMoE,MAAME,IAAEC,UAAUjD,KAAKtB,MAAMoE,MAAO,CAAEtF,GAAIqF,KAAYpB,KAEjE,KAhBnB,qCAoBoB,IAAD,OACX,OAAGzB,KAAKtB,MAAMwE,SAASH,OAAS,EAExB/C,KAAKtB,MAAMwE,SAASd,KAAI,SAACe,GACrB,OACA,yBAAKd,IAAKc,EAAQ3F,GAAIR,UAAU,SAC5B,yBAAKoG,IAAKD,EAAQE,UAAWC,IAAKH,EAAQ1B,KAAM8B,MAAM,UACtD,4BAAKJ,EAAQ1B,MACb,wCAAc0B,EAAQK,UACtB,iDAAuBL,EAAQM,UAC/B,2BAAIN,EAAQO,YAAYC,MAAM,EAAG,IAAjC,OACI,2CAAgB,uBAAGC,KAAK,IAAI,EAAKhB,UAAUO,EAAQN,WACvD,sCAAYgB,KAAKC,MAAMD,KAAKE,IAAI,IAAIC,KAAS,IAAIA,KAAKb,EAAQc,aAAa,IAAK,GAAG,GAAG,IAAtF,iBAML,KAtCnB,+BA2CQ,OACI,yBAAKjH,UAAU,OACVgD,KAAK2C,oBA7CtB,GAA8BlF,cCwBfyG,E,kDAvBX,aAAe,IAAD,8BACV,gBACKC,QAAU,EAAKA,QAAQ9E,KAAb,gBAFL,E,sDAMV,OAAGW,KAAKtB,MAAMoE,MAAMC,OAAS,GAAK/C,KAAKtB,MAAMwE,SAASH,OAAS,EACpD,kBAAC,EAAD,CAAUD,MAAO9C,KAAKtB,MAAMoE,MAAOI,SAAUlD,KAAKtB,MAAMwE,WAExD,K,+BAKf,OACQ,6BACI,0CACClD,KAAKmE,e,GAnBF1G,aCSL2G,E,uKARP,OACI,6BACI,sD,GAJG3G,a,gBCiIJ4G,E,kDAzGb,WAAY3F,GAAQ,IAAD,8BACjB,cAAMA,IA8CN4F,YAAc,WACZ/E,IAAMC,IAAN,UApDc,wBAoDd,cACD,CAACkB,iBAAiB,IAChBjB,MAAK,SAAAkB,GACAA,EAASf,KAAK6C,UAChB,EAAKT,YAAYrB,GAEjB,EAAKC,kBAGRG,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,cAAeF,OAzD5B,EA4DnBgB,YAAc,SAACpC,GACb,EAAKD,SAAS,CACZwB,YAAY,EACZC,KAAMxB,EAAKwB,QA/DI,EAmEnBR,aAAe,WACX,EAAKjB,SAAS,CACdwB,YAAY,EACZC,KAAM,MApER,EAAKnC,MAAQ,CACXsF,YAAY,GAAD,OANE,oCAMF,aACXC,SAAS,GAAD,OAPK,oCAOL,UACRrD,YAAY,EACZC,KAAM,GACN0B,MAAO,GACPI,SAAU,IAGZ,EAAKuB,cAAgB,EAAKA,cAAcpF,KAAnB,gBACrB,EAAKqF,WAAa,EAAKA,WAAWrF,KAAhB,gBAClB,EAAKoF,gBACL,EAAKC,aAdY,E,4DAiBF,IAAD,OACdnF,IAAMC,IAAIQ,KAAKf,MAAMsF,aAClB9E,MAAK,SAAAkB,GACAA,EAASf,KACX,EAAKD,SAAS,CAAEuD,SAAUvC,EAASf,OAEnC,EAAKD,SAAS,CACZuC,OAAQvB,EAASf,KAAKsC,c,mCAMlB,IAAD,OACX3C,IAAMC,IAAIQ,KAAKf,MAAMuF,UAClB/E,MAAK,SAAAkB,GACAA,EAASf,KACX,EAAKD,SAAS,CAAEmD,MAAOnC,EAASf,KAAKkD,QAErC,EAAKnD,SAAS,CACZuC,OAAQvB,EAASf,KAAKsC,c,0CAO9BlC,KAAKsE,gB,+BA8BG,IAAD,OACP,OACE,yBAAKtH,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2H,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,WAAWG,OAAQ,SAAArG,GAAK,OACxC,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBsD,YAAa,EAAKA,YAAaX,eAAgB,EAAKpC,MAAMkC,iBAE/E,kBAAC,IAAD,CAAOwD,OAAK,EAACC,KAAK,WAAWG,OAAQ,SAAArG,GAAK,OACxC,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBsD,YAAa,EAAKA,YAAaX,eAAgB,EAAKpC,MAAMkC,iBAE/E,kBAAC,IAAD,CAAOwD,OAAK,EAACC,KAAK,SAASG,OAAQ,SAAArG,GAAK,OAAK,kBAAC,EAAD,CAAOoE,MAAO,EAAK7D,MAAM6D,MAAOI,SAAU,EAAKjE,MAAMiE,cAClG,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,QAAQC,UAAWT,IAErC,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,IAAIG,OAAQ,SAAArG,GAAK,OACjC,kBAAC,EAAD,iBAAUA,EAAV,CAAiBkC,aAAc,EAAKA,aAAcS,eAAgB,EAAKpC,MAAMkC,0B,GA9F/E1D,aCbEuH,QACW,cAA7BC,OAAOnF,SAASoF,UAEe,UAA7BD,OAAOnF,SAASoF,UAEhBD,OAAOnF,SAASoF,SAASC,MACvB,2D,OCXNC,IAASL,OACL,kBAAC,EAAD,MACFM,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhG,MAAK,SAAAiG,GACJA,EAAaC,gBAEd5E,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM4E,c","file":"static/js/main.959c97c9.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nimport './NavBar.css'\n\nclass NavBar extends Component{\n    render(){\n        return(\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light static-top mb-5 shadow\">\n                <Link to=\"/\" className=\"navbar-brand\">Covid Coop⚕</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\"\n                    aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                    <ul className=\"navbar-nav ml-auto \">\n                    <li className=\"nav-item\">\n                        <Link to='/' className=\"nav-link\">Home</Link>\n                    </li>\n                    {/* TODO only render if not logged in */}\n                    <li className=\"nav-item\">\n                        <Link to='/sign-up' className=\"nav-link\">Sign up</Link>\n                    </li>  \n                    {/* TODO only render if not logged in */}\n                    <li className=\"nav-item\">\n                        <Link to='/sign-in' className=\"nav-link\">Sign in</Link>\n                    </li>  \n                    {/* TODO only render if logged in */}\n                    <li className=\"nav-item\">\n                        <Link to='/order' className=\"nav-link\">Place order</Link>\n                    </li>\n                    {/* TODO conditionally render only if cart.length>1 */}\n                    <li className=\"nav-item\">\n                        <Link to='/cart' className=\"nav-link\">View Cart</Link>\n                    </li>\n                    </ul>\n                </div>  \n            </nav>\n        )\n    }\n}\nexport default NavBar;","import React, {Component} from 'react';\n\nclass Home extends Component{\n    render(){\n    return(\n            <div>\n                <h1>About page</h1>\n            </div>\n        )   \n    }\n}\n\nexport default Home;","import React from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\nconst google_api_key = process.env.REACT_APP_GOOGLE_API_KEY\nconst CENTRE_OF_AUSTRALIA = {lat: -25.363, lng: 134.211}\nconst MapContainer = compose(\n  withProps({\n    googleMapURL:\n      `https://maps.googleapis.com/maps/api/js?key=${google_api_key}&v=3.exp&libraries=geometry,drawing,places`,\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `600px` }} />,\n    mapElement: <div style={{ height: `100%` }} />\n  }),\n  withScriptjs,\n  withGoogleMap\n)(props => (\n  <GoogleMap defaultZoom={4} defaultCenter={CENTRE_OF_AUSTRALIA}>\n    {props.isMarkerShown && (\n        <div>\n            <Marker position={{ lat: -34.397, lng: 150.144 }} />\n            <Marker position={{ lat: -34.497, lng: 150.644 }} />\n        </div>\n    )}\n  </GoogleMap>\n));\n\nexport default MapContainer;","import React, {Component} from \"react\";\nimport axios from \"axios\";\nconst google_api_key = process.env.REACT_APP_GOOGLE_API_KEY\nconst RESPONSE_TYPE = \"json\";\nconst SERVER_URL = `https://maps.googleapis.com/maps/api/geocode/${RESPONSE_TYPE}?`\nclass AddressConverter extends Component{\n    constructor(){\n        super(); // necessary\n        this.state={ // where we define the variables we want to store and sahre across the component\n            coordinates: {lat: null,  lng: null}, \n            address: '',\n        }\n        this._handleChange = this._handleChange.bind(this); // allows these functions to access `this'\n        this._handleSubmit = this._handleSubmit.bind(this);\n        // fetchGPS(\"18 Zephyr Court Birkdale\");\n    }\n    fetchGPS(address){\n        axios.get(`${SERVER_URL}key=${google_api_key}&address=${address}`)\n        .then((results) =>{\n        this.setState(\n            {coordinates: results.data.results[0].geometry.location}\n        );\n        })\n    }\n    \n    _handleChange(event){\n        this.setState({address: event.target.value});\n    }\n    _handleSubmit(event){\n        event.preventDefault();\n        this.fetchGPS(this.state.address);\n    }\n    render(){\n\n        return(\n            <div className=\"container\">\n                <h2> convert address to gps </h2>\n                <form onSubmit={this._handleSubmit}>\n                    <input type=\"text\" placeholder=\"address\" onChange={this._handleChange} /> \n                    <button>Submit</button>\n                </form>\n                <div className=\"output-display\">\n                    Output Coordinates: {`Lat: ${this.state.coordinates.lat}, Long: ${this.state.coordinates.lng}` }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddressConverter;","import React, {Component} from 'react';\nimport axios from 'axios'\nimport {Link} from 'react-router-dom';\nimport  MapContainer  from './MapContainer';\nimport  AddressConverter  from './AddressConverter';\nimport './Home.css';\nclass Home extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      user: {}\n     };\n  }\n\n  handleClick = () => {\n    axios.delete('http://localhost:3001/logout', {withCredentials: true})\n    .then(response => {\n      this.handleLogout()\n      this.history.push('/')\n    })\n    .catch(error => console.log(error))\n  }\n\n  render(){\n  return(\n          <div>\n              <h1>Home page content</h1>\n\n              {\n                this.props.loggedInStatus ?\n                <Link to='/logout' onClick={this.handleClick}>Log Out</Link> :\n                null\n              }\n              <MapContainer  isMarkerShown/>\n                <AddressConverter />\n          </div>\n      )\n  }\n}\n\nexport default Home;\n","import React, {useState, Component}  from 'react';\nimport './Signup.css';\nimport axios from 'axios';\nimport { render } from '@testing-library/react';\nclass Signup extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: 'test@test.com',\n      password: 'chicken',\n      password_confirmation: 'chicken',\n      address: '',\n      errors: '',\n      SERVER_URL: 'http://covid-co-op.herokuapp.com/'\n     };\n  }\n\n\n  handleChange = (event) => {\n      const {name, value} = event.target\n      this.setState({\n        [name]: value\n      })\n    };\n\n  handleSubmit = (event) => {\n      event.preventDefault()\n      const {email, password, password_confirmation, address} = this.state\n  let user = {\n    email: email,\n    password: password,\n    password_confirmation: password_confirmation,\n    location: address\n  }\n    axios.post('http://localhost:3000/users', user, {withCredentials: true})\n  .then(response => {\n    if (response.data.status === 'created') {\n      this.props.handleLogin(response.data)\n      this.redirect()\n    } else {\n      this.setState({\n        errors: response.data.errors\n      })\n    }\n  })\n  .catch(error => console.log('api errors:', error))\n  };\n\n  redirect = () => {\n    this.props.history.push('/')\n  }\n\n  handleErrors = () => {\n    return (\n      <div>\n        <ul>{this.state.errors.map((error) => {\n          return <li key={error}>{error}</li>\n        })}\n        </ul>\n      </div>\n    )\n  }\n\n    render(){\n      const {email, password, password_confirmation, address} = this.state\n\n        return(\n            <div class='row justify-content-md-center'>\n                <div class=\"col-md-6\">\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <h2 class = \"center\">Sign Up</h2>\n                              <form onSubmit={this.handleSubmit}>\n                                <div class=\"form-group\">\n                                    <label for=\"email\">Email</label>\n                                    <input\n                                      class=\"form-control\"\n                                      name=\"email\"\n                                      type=\"email\"\n                                      id=\"email\"\n                                      placeholder=\"Email\"\n                                      onChange={this.handleChange}\n                                      value={this.state.email}\n                                    />\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"password\">Password</label>\n                                    <input\n                                      class=\"form-control\"\n                                      type=\"password\"\n                                      name=\"password_confirmation\"\n                                      id=\"password\"\n                                      placeholder=\"Password\"\n                                      onChange={this.handleChange}\n                                      value={this.state.password}\n                                    />\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"password-confirmation\">Confirm Password</label>\n                                    <input\n                                      class=\"form-control\"\n                                      type=\"password\"\n                                      name=\"password\"\n                                      id=\"password-confirmation\"\n                                      placeholder=\"Password\"\n                                      onChange={this.handleChange}\n                                      value={this.state.password_confirmation}\n                                    />\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"address\">Address</label>\n                                    <input\n                                      class=\"form-control\"\n                                      type=\"text\"\n                                      name=\"address\"\n                                      id=\"address\"\n                                      placeholder=\"address\"\n                                      onChange={this.handleChange}\n                                      value={this.state.address}\n                                    />\n                                </div>\n                                <button type=\"submit\" id=\"submit-btn\" class=\"btn btn-primary\">Submit</button>\n                              </form>\n\n                                <div>\n                                  {\n                                    this.state.errors ? this.handleErrors() : null\n                                  }\n                                </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Signup;\n","import React, {useState, Component}  from 'react';\nimport './Signin.css';\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport { render } from '@testing-library/react';\nclass Signin extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errors: ''\n     };\n  }\n  componentWillMount() {\n    return this.props.loggedInStatus ? this.redirect() : null\n  }\n\n  handleChange = (event) => {\n    const {name, value} = event.target\n    this.setState({\n      [name]: value\n    })\n  };\n\n  handleSubmit = (event) => {\n      event.preventDefault()\n      const {email, password} = this.state\n\n      let user = {\n        email: email,\n        password: password\n      }\n\n      axios.post('http://localhost:3000/login', {user}, {withCredentials: true})\n        .then(response => {\n          if (response.data.logged_in) {\n            this.props.handleLogin(response.data)\n            this.redirect()\n          } else {\n            this.setState({\n              errors: response.data.errors\n            })\n          }\n        })\n        .catch(error => console.log('api errors:', error))\n      };\n\n    redirect = () => {\n      this.props.history.push('/')\n    }\n\n    handleErrors = () => {\n        return (\n          <div>\n            <ul>\n            {this.state.errors.map(error => {\n            return <li key={error}>{error}</li>\n              })}\n            </ul>\n          </div>\n        )\n      }\n\n    render(){\n      const {email, password} = this.state\n\n        return(\n            <div class='row justify-content-md-center'>\n                <div class=\"col-md-6\">\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <h2 class = \"center\">Sign In</h2>\n                              <form onSubmit={this.handleSubmit}>\n                                <div class=\"form-group\">\n                                    <label for=\"email\">Email</label>\n                                    <input\n                                      class=\"form-control\"\n                                      name=\"email\"\n                                      type=\"email\"\n                                      id=\"email\"\n                                      placeholder=\"Email\"\n                                      value={this.state.email}\n                                      onChange={this.handleChange}\n                                    />\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"password\">Password</label>\n                                    <input\n                                      class=\"form-control\"\n                                      name=\"password\"\n                                      type=\"password\"\n                                      id=\"password\"\n                                      placeholder=\"Password\"\n                                      value={this.state.password}\n                                      onChange={this.handleChange}\n                                    />\n                                </div>\n                                <button type=\"submit\" id=\"submit-btn\" class=\"btn btn-primary\">Sign In</button>\n                              </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Signin;\n","import React, { Component } from 'react'\nimport _ from \"lodash\";\nimport './Products.css'\n\nexport class Products extends Component {\n\n    constructor() {\n        super();\n        this.showProducts = this.showProducts.bind(this);\n        this.matchUser = this.matchUser.bind(this);\n    }\n\n\n    // AXIOS CALL TO GET ALL PRODUCTS FROM THE SERVER\n\n\n    matchUser(user_id) {\n        if (this.props.users.length > 0) {\n            return this.props.users[_.findIndex(this.props.users, { id: user_id })].name;\n        } else {\n            return '';\n        }\n    }\n\n    showProducts() {\n        if(this.props.products.length > 0) {\n            return(\n                this.props.products.map((product) => {\n                    return(\n                    <div key={product.id} className='col-4'>\n                        <img src={product.image_url} alt={product.name} width='200px'/>\n                        <h3>{product.name}</h3>\n                        <p>Category: {product.category}</p>\n                        <p>Quanity available: {product.quantity}</p>\n                        <p>{product.description.slice(0, 30)}...</p>\n                            <p>Provided by: <a href=\"\">{this.matchUser(product.user_id)}</a></p>\n                        <p>Posted: {Math.floor(Math.abs(new Date() - new Date(product.created_at))/1000/60/60/24)} days ago</p>\n                    </div>\n                    )\n                })\n            )\n        } else{\n            return '';\n        }\n    }\n\n    render() {\n        return (\n            <div className='row'>\n                {this.showProducts()}\n            </div>\n        )\n    }\n}\n\nexport default Products\n","import React, {Component} from 'react';\nimport Products from \"./Products\";\n\nclass Order extends Component{\n\n    constructor() {\n        super();\n        this.propsIn = this.propsIn.bind(this);\n    }\n\n    propsIn() {\n        if(this.props.users.length > 0 && this.props.products.length > 0) {\n            return <Products users={this.props.users} products={this.props.products} />\n        } else {\n            return '';\n        }\n    }\n\n    render(){\n    return(\n            <div>\n                <h1>Order page</h1>\n                {this.propsIn()}\n            </div>\n        )   \n    }\n}\n\nexport default Order;","import React, {Component} from 'react';\n\nclass Cart extends Component{\n    render(){\n        return(\n            <div>\n                <h2>This is your cart</h2>\n            </div>\n        )\n    }\n}\n\nexport default Cart","import React, { Component } from 'react';\n\nimport NavBar from './NavBar';\nimport About from './About';\nimport Home from './Home';\nimport Signup from './Signup';\nimport Signin from './Signin';\nimport Order from './Order';\nimport Cart from './Cart';\n\n\nimport './App.css';\n\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport axios from 'axios';\n\nlet FRONT_END_URL = \"http://localhost:3000\";\nlet BACK_END_URL = \"https://covid-co-op.herokuapp.com\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      PRODUCT_URL: `${BACK_END_URL}/products`,\n      USER_URL: `${BACK_END_URL}/users`,\n      isLoggedIn: false,\n      user: {},\n      users: [],\n      products: []\n     };\n\n    this.fetchProducts = this.fetchProducts.bind(this);\n    this.fetchUsers = this.fetchUsers.bind(this);\n    this.fetchProducts();\n    this.fetchUsers();\n  }\n\n  fetchProducts() {\n    axios.get(this.state.PRODUCT_URL)\n      .then(response => {\n        if (response.data) {\n          this.setState({ products: response.data });\n        } else {\n          this.setState({\n            errors: response.data.errors\n          })\n        }\n      })\n  }\n\n  fetchUsers() {\n    axios.get(this.state.USER_URL)\n      .then(response => {\n        if (response.data) {\n          this.setState({ users: response.data.users });\n        } else {\n          this.setState({\n            errors: response.data.errors\n          })\n        }\n      })\n  }\n\n  componentDidMount() {\n    this.loginStatus()\n  }\n\n    loginStatus = () => {\n      axios.get(`${FRONT_END_URL}/logged_in`,\n     {withCredentials: true})\n      .then(response => {\n        if (response.data.logged_in) {\n          this.handleLogin(response)\n        } else {\n          this.handleLogout()\n        }\n      })\n      .catch(error => console.log('api errors:', error))\n    }\n\n  handleLogin = (data) => {\n    this.setState({\n      isLoggedIn: true,\n      user: data.user\n    })\n  }\n\n  handleLogout = () => {\n      this.setState({\n      isLoggedIn: false,\n      user: {}\n      })\n    }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <NavBar/>\n          <div className='content'>\n            <div className='body'>\n                <Switch>\n                  <Route exact path='/about' component={About}/>\n                  <Route exact path='/sign-up' render={props => (\n                    <Signup {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>)}\n                  />\n                  <Route exact path='/sign-in' render={props => (\n                    <Signin {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>)}\n                  />\n                  <Route exact path='/order' render={props => (<Order users={this.state.users} products={this.state.products} />)} />      \n                  <Route exact path='/cart' component={Cart}/>\n\n                  <Route exact path='/' render={props => (\n                    <Home {...props} handleLogout={this.handleLogout} loggedInStatus={this.state.isLoggedIn}/>)}\n                  />\n              </Switch>\n            </div>\n          </div>\n          {/* <Footer/> */}\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}